Microsoft Windows [Version 10.0.19042.928]
(c) Microsoft Corporation. All rights reserved.

C:\python_stack>cd my_environments

C:\python_stack\my_environments>call djangoPy3Env/Scripts/activate

(djangoPy3Env) C:\python_stack\my_environments>cd ..

(djangoPy3Env) C:\python_stack>cd django

(djangoPy3Env) C:\python_stack\django>cd django_intro

(djangoPy3Env) C:\python_stack\django\django_intro>django-admin startproject single_model_orm

(djangoPy3Env) C:\python_stack\django\django_intro>django-admin startapp users_app

(djangoPy3Env) C:\python_stack\django\django_intro>code .

(djangoPy3Env) C:\python_stack\django\django_intro>cd single_model_orm

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>code .

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>django-admin startapp users_app

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py makemigrations
Traceback (most recent call last):
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 21, in <module>
    main()
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 323, in run_from_argv
    self.execute(*args, **cmd_options)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 361, in execute
    self.check()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 387, in check
    all_issues = self._run_checks(
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 377, in _run_checks
    return checks.run_checks(**kwargs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\registry.py", line 72, in run_checks
    new_errors = check(app_configs=app_configs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 13, in check_url_config
    return check_resolver(resolver)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 398, in check
    for pattern in self.url_patterns:
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\utils\functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 579, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\utils\functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 572, in urlconf_module
    return import_module(self.urlconf_name)
  File "C:\Users\RelaX\AppData\Local\Programs\Python\Python39\lib\importlib\__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1030, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1007, in _find_and_load
  File "<frozen importlib._bootstrap>", line 986, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 680, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 851, in exec_module
  File "<frozen importlib._bootstrap_external>", line 988, in get_code
  File "<frozen importlib._bootstrap_external>", line 918, in source_to_code
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "C:\python_stack\django\django_intro\single_model_orm\single_model_orm\urls.py", line 18
    from django.urls.conf import include,
                                         ^
SyntaxError: trailing comma not allowed without surrounding parentheses

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py makemigrations
Traceback (most recent call last):
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 581, in url_patterns
    iter(patterns)
TypeError: 'module' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 21, in <module>
    main()
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 323, in run_from_argv
    self.execute(*args, **cmd_options)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 361, in execute
    self.check()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 387, in check
    all_issues = self._run_checks(
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 377, in _run_checks
    return checks.run_checks(**kwargs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\registry.py", line 72, in run_checks
    new_errors = check(app_configs=app_configs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 13, in check_url_config
    return check_resolver(resolver)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 399, in check
    messages.extend(check_resolver(pattern))
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 398, in check
    for pattern in self.url_patterns:
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\utils\functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 588, in url_patterns
    raise ImproperlyConfigured(msg.format(name=self.urlconf_name))
django.core.exceptions.ImproperlyConfigured: The included URLconf '<module 'users_app' from 'C:\\python_stack\\django\\django_intro\\single_model_orm\\users_app\\__init__.py'>' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py migrate
Traceback (most recent call last):
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 581, in url_patterns
    iter(patterns)
TypeError: 'module' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 21, in <module>
    main()
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 323, in run_from_argv
    self.execute(*args, **cmd_options)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 361, in execute
    self.check()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 387, in check
    all_issues = self._run_checks(
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\commands\migrate.py", line 65, in _run_checks
    issues.extend(super()._run_checks(**kwargs))
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 377, in _run_checks
    return checks.run_checks(**kwargs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\registry.py", line 72, in run_checks
    new_errors = check(app_configs=app_configs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 13, in check_url_config
    return check_resolver(resolver)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 399, in check
    messages.extend(check_resolver(pattern))
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 398, in check
    for pattern in self.url_patterns:
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\utils\functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 588, in url_patterns
    raise ImproperlyConfigured(msg.format(name=self.urlconf_name))
django.core.exceptions.ImproperlyConfigured: The included URLconf '<module 'users_app' from 'C:\\python_stack\\django\\django_intro\\single_model_orm\\users_app\\__init__.py'>' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py makemigrations
Traceback (most recent call last):
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 581, in url_patterns
    iter(patterns)
TypeError: 'module' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 21, in <module>
    main()
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 323, in run_from_argv
    self.execute(*args, **cmd_options)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 361, in execute
    self.check()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 387, in check
    all_issues = self._run_checks(
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 377, in _run_checks
    return checks.run_checks(**kwargs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\registry.py", line 72, in run_checks
    new_errors = check(app_configs=app_configs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 13, in check_url_config
    return check_resolver(resolver)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 399, in check
    messages.extend(check_resolver(pattern))
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 398, in check
    for pattern in self.url_patterns:
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\utils\functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 588, in url_patterns
    raise ImproperlyConfigured(msg.format(name=self.urlconf_name))
django.core.exceptions.ImproperlyConfigured: The included URLconf '<module 'users_app' from 'C:\\python_stack\\django\\django_intro\\single_model_orm\\users_app\\__init__.py'>' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py makemigrations
Traceback (most recent call last):
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 581, in url_patterns
    iter(patterns)
TypeError: 'module' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 21, in <module>
    main()
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 323, in run_from_argv
    self.execute(*args, **cmd_options)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 361, in execute
    self.check()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 387, in check
    all_issues = self._run_checks(
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 377, in _run_checks
    return checks.run_checks(**kwargs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\registry.py", line 72, in run_checks
    new_errors = check(app_configs=app_configs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 13, in check_url_config
    return check_resolver(resolver)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 399, in check
    messages.extend(check_resolver(pattern))
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 398, in check
    for pattern in self.url_patterns:
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\utils\functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 588, in url_patterns
    raise ImproperlyConfigured(msg.format(name=self.urlconf_name))
django.core.exceptions.ImproperlyConfigured: The included URLconf '<module 'users_app' from 'C:\\python_stack\\django\\django_intro\\single_model_orm\\users_app\\__init__.py'>' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py makemigrations
Traceback (most recent call last):
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 581, in url_patterns
    iter(patterns)
TypeError: 'module' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 21, in <module>
    main()
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 323, in run_from_argv
    self.execute(*args, **cmd_options)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 361, in execute
    self.check()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 387, in check
    all_issues = self._run_checks(
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 377, in _run_checks
    return checks.run_checks(**kwargs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\registry.py", line 72, in run_checks
    new_errors = check(app_configs=app_configs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 13, in check_url_config
    return check_resolver(resolver)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 399, in check
    messages.extend(check_resolver(pattern))
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 398, in check
    for pattern in self.url_patterns:
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\utils\functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 588, in url_patterns
    raise ImproperlyConfigured(msg.format(name=self.urlconf_name))
django.core.exceptions.ImproperlyConfigured: The included URLconf '<module 'users_app' from 'C:\\python_stack\\django\\django_intro\\single_model_orm\\users_app\\__init__.py'>' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py makemigrations
Traceback (most recent call last):
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 581, in url_patterns
    iter(patterns)
TypeError: 'module' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 21, in <module>
    main()
  File "C:\python_stack\django\django_intro\single_model_orm\manage.py", line 17, in main
    execute_from_command_line(sys.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\__init__.py", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 323, in run_from_argv
    self.execute(*args, **cmd_options)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 361, in execute
    self.check()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 387, in check
    all_issues = self._run_checks(
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\management\base.py", line 377, in _run_checks
    return checks.run_checks(**kwargs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\registry.py", line 72, in run_checks
    new_errors = check(app_configs=app_configs)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 13, in check_url_config
    return check_resolver(resolver)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 399, in check
    messages.extend(check_resolver(pattern))
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\core\checks\urls.py", line 23, in check_resolver
    return check_method()
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 398, in check
    for pattern in self.url_patterns:
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\utils\functional.py", line 80, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "C:\python_stack\my_environments\djangoPy3Env\lib\site-packages\django\urls\resolvers.py", line 588, in url_patterns
    raise ImproperlyConfigured(msg.format(name=self.urlconf_name))
django.core.exceptions.ImproperlyConfigured: The included URLconf '<module 'users_app.urls' from 'C:\\python_stack\\django\\django_intro\\single_model_orm\\users_app\\urls.py'>' does not appear to have any patterns in it. If you see valid patterns in the file then the issue is probably caused by a circular import.

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py makemigrations
Migrations for 'users_app':
  users_app\migrations\0001_initial.py
    - Create model users

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions, users_app
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying sessions.0001_initial... OK
  Applying users_app.0001_initial... OK

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py shell
Python 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from users_app.models import *
>>> users.objects.create(first_name = "Omar" , last_name = "Daqah", email_address = "omardakka42@gmail.com", age = "23")
<users: users object (1)>
>>> users.objects.create(first_name = "Jad" , last_name = "Dawani", email_address = "Jaddawani@gmail.com", age = "24")
<users: users object (2)>
>>> users.objects.create(first_name = "Jack" , last_name = "Daniels", email_address = "Jackdaniels@gmail.com", age = "100")
<users: users object (3)>
>>> hello = users_app.models
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'users_app' is not defined
>>> hello = users.models
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'users' has no attribute 'models'
>>> users.object.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'users' has no attribute 'object'
>>> all_users = users.objects.all()
>>> all_users.first_name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'first_name'
>>> all_users
<QuerySet [<users: users object (1)>, <users: users object (2)>, <users: users object (3)>]>
>>> all_users.all
<bound method QuerySet.all of <QuerySet [<users: users object (1)>, <users: users object (2)>, <users: users object (3)>]>>
>>> all_users.users.first_name
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'users'
>>> all_users
<QuerySet [<users: users object (1)>, <users: users object (2)>, <users: users object (3)>]>
>>> all_users.(1)
  File "<console>", line 1
    all_users.(1)
              ^
SyntaxError: invalid syntax
>>> all_users.users object (1)
  File "<console>", line 1
    all_users.users object (1)
                    ^
SyntaxError: invalid syntax
>>> print(all_users.first_name)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'first_name'
>>> print(all_users)
<QuerySet [<users: users object (1)>, <users: users object (2)>, <users: users object (3)>]>
>>> print(all_users.objects.get(id=1).first_name)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'objects'
>>> print(all_users.objects.get(id=1).first_name)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'objects'
>>> first_user = users.objects.get(id=1)
>>> print(first_user.first_name)
Omar
>>> print(user.objects.all().__dict__
... from django.urls import path,include
  File "<console>", line 2
    from django.urls import path,include
    ^
SyntaxError: invalid syntax
>>>
>>> urlpatterns = [
...     # path('admin/', admin.site.urls),
...     path('', include("users_app.urls"))
... ]
Traceback (most recent call last):
  File "<console>", line 3, in <module>
NameError: name 'path' is not defined
>>> print(user.objects.get(id=1).__dict__
...
...
...
...
...
...
... prjt
  File "<console>", line 8
    prjt
    ^
SyntaxError: invalid syntax
>>> print(first_user).__dict__
users object (1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'NoneType' object has no attribute '__dict__'
>>> print(first_user)
users object (1)
>>> print(first_user.last_name)
Daqah
>>> exit()

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py makemigrations
No changes detected

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions, users_app
Running migrations:
  No migrations to apply.

(djangoPy3Env) C:\python_stack\django\django_intro\single_model_orm>python manage.py shell
Python 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> print(users.objects.all)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'users' is not defined
>>> print(users.objects.all())
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'users' is not defined
>>> print(first_user)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'first_user' is not defined
>>> print(first_user.first_name)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'first_user' is not defined
>>> cls
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'cls' is not defined
>>>
>>> users.objects.all().values()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'users' is not defined
>>> from users_app.models import *
>>> users.objects.all().values()
<QuerySet [{'id': 1, 'first_name': 'Omar', 'last_name': 'Daqah', 'email_address': 'omardakka42@gmail.com', 'age': 23, 'created_at': datetime.datetime(2021, 5, 20, 8, 41, 20, 253939, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 20, 8, 41, 20, 253939, tzinfo=<UTC>)}, {'id': 2, 'first_name': 'Jad', 'last_name': 'Dawani', 'email_address': 'Jaddawani@gmail.com', 'age': 24, 'created_at': datetime.datetime(2021, 5, 20, 8, 42, 17, 454482, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 20, 8, 42, 17, 455517, tzinfo=<UTC>)}, {'id': 3, 'first_name': 'Jack', 'last_name': 'Daniels', 'email_address': 'Jackdaniels@gmail.com', 'age': 100, 'created_at': datetime.datetime(2021, 5, 20, 8, 42, 51, 762514, tzinfo=<UTC>), 'updated_at': datetime.datetime(2021, 5, 20, 8, 42, 51, 762514, tzinfo=<UTC>)}]>
>>> users.objects.get(id=3)
<users: <users object: Jack Daniels Jackdaniels@gmail.com 100 (3)>>
>>> users.objects.last()
<users: <users object: Jack Daniels Jackdaniels@gmail.com 100 (3)>>
>>> users.objects.first()
<users: <users object: Omar Daqah omardakka42@gmail.com 23 (1)>>
>>> third_user = users.objects.get(id=3)
>>> third
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'third' is not defined
>>> third_user.last_name = "Pancakes"
>>> third_user.save
<bound method Model.save of <users: <users object: Jack Pancakes Jackdaniels@gmail.com 100 (3)>>>
>>> second_user= users.object.get(id=2)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'users' has no attribute 'object'
>>> second_user= users.objects.get(id=2)
>>> second_user.delete()
(1, {'users_app.users': 1})
>>> users.objects.all().order_by("first_name")
<QuerySet [<users: <users object: Jack Daniels Jackdaniels@gmail.com 100 (3)>>, <users: <users object: Omar Daqah omardakka42@gmail.com 23 (1)>>]>
>>> users.objects.all().order_by("-first_name")
<QuerySet [<users: <users object: Omar Daqah omardakka42@gmail.com 23 (1)>>, <users: <users object: Jack Daniels Jackdaniels@gmail.com 100 (3)>>]>
>>>